{"ast":null,"code":"var _jsxFileName = \"/Users/Talha/Desktop/React-class35/week3/project/ecommerce/src/components/Products.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Product from './Product';\nimport useFetch from '../hooks/useFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Products(_ref) {\n  _s();\n\n  let {\n    selectedCategory // checkLoading: [isLoading, setIsLoading],\n    // checkError: [isError, setIsError],\n\n  } = _ref;\n  const [products, setProducts] = useState([]);\n  let url;\n  selectedCategory === '' ? url = 'https://fakestoreapi.com/products/categories' : url = `https://fakestoreapi.com/products/category/${selectedCategory}`;\n  const {\n    data,\n    isLoading,\n    isError\n  } = useFetch('https://fakestoreapi.com/products/categories');\n\n  async function getProducts() {\n    const mewData = await data;\n    setProducts(newdata);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"products\",\n    children: isError ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"BAD REQUEST!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : isLoading ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : products.map(product => /*#__PURE__*/_jsxDEV(Product, {\n      id: product.id,\n      title: product.title,\n      image: product.image\n    }, product.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Products, \"X82+QgdDFinmlUQn9+GBRUoAlnc=\", false, function () {\n  return [useFetch];\n});\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/Users/Talha/Desktop/React-class35/week3/project/ecommerce/src/components/Products.js"],"names":["useEffect","useState","Product","useFetch","Products","selectedCategory","products","setProducts","url","data","isLoading","isError","getProducts","mewData","newdata","map","product","id","title","image"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;AAGA,SAASC,QAAT,OAIG;AAAA;;AAAA,MAJe;AAChBC,IAAAA,gBADgB,CAEhB;AACA;;AAHgB,GAIf;AACD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AAEA,MAAIO,GAAJ;AACAH,EAAAA,gBAAgB,KAAK,EAArB,GAA0BG,GAAG,GAAG,8CAAhC,GAAiFA,GAAG,GAAG,8CAA6CH,gBAAiB,EAArJ;AAEA,QAAM;AAAEI,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA;AAAnB,MAA+BR,QAAQ,CAAC,8CAAD,CAA7C;;AAGA,iBAAeS,WAAf,GAA6B;AACvB,UAAMC,OAAO,GAAG,MAAMJ,IAAtB;AACAF,IAAAA,WAAW,CAACO,OAAD,CAAX;AACH;;AAIH,sBACE;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA,cACGH,OAAO,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,GAEJD,SAAS,gBACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADW,GAGXJ,QAAQ,CAACS,GAAT,CAAcC,OAAD,iBACX,QAAC,OAAD;AACE,MAAA,EAAE,EAAEA,OAAO,CAACC,EADd;AAEE,MAAA,KAAK,EAAED,OAAO,CAACE,KAFjB;AAGE,MAAA,KAAK,EAAEF,OAAO,CAACG;AAHjB,OAIOH,OAAO,CAACC,EAJf;AAAA;AAAA;AAAA;AAAA,YADF;AANJ;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAtCQb,Q;UAU8BD,Q;;;KAV9BC,Q;AAwCT,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport Product from './Product';\nimport useFetch from '../hooks/useFetch';\n\n\nfunction Products({\n  selectedCategory,\n  // checkLoading: [isLoading, setIsLoading],\n  // checkError: [isError, setIsError],\n}) {\n  const [products, setProducts] = useState([]);\n\n  let url;\n  selectedCategory === '' ? url = 'https://fakestoreapi.com/products/categories' : url= `https://fakestoreapi.com/products/category/${selectedCategory}`\n\n  const { data, isLoading, isError } = useFetch('https://fakestoreapi.com/products/categories');\n\n\n  async function getProducts() {\n        const mewData = await data\n        setProducts(newdata);\n    }\n\n \n\n  return (\n    <ul className=\"products\">\n      {isError ? (\n        <span>BAD REQUEST!</span>\n      ) : isLoading ? (\n        <span>Loading...</span>\n      ) : (\n        products.map((product) => (\n          <Product\n            id={product.id}\n            title={product.title}\n            image={product.image}\n            key={product.id}\n          />\n        ))\n      )}\n    </ul>\n  );\n}\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}