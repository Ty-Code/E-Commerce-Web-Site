{"ast":null,"code":"var _jsxFileName = \"/Users/Talha/Desktop/React-class35/week2/project/ecommerce/src/components/Products.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Product from './Product';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Products(_ref) {\n  _s();\n\n  let {\n    selectedCategory\n  } = _ref;\n  const [products, setProducts] = useState([]);\n  const navigate = useNavigate();\n\n  async function getProducts() {\n    const response = await fetch('https://fakestoreapi.com/products/');\n    const productList = await response.json();\n    setProducts(productList);\n  }\n\n  async function getFilteredProducts() {\n    const response = await fetch(`https://fakestoreapi.com/products/category/${selectedCategory}`);\n    const filteredProductList = await response.json();\n    setProducts(filteredProductList);\n  }\n\n  useEffect(() => {\n    selectedCategory !== '' ? getFilteredProducts() : getProducts();\n  }, [products]);\n\n  function navigateToProduct(id) {\n    navigate(`/products/${id}`);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"products\",\n    children: products.map(product => /*#__PURE__*/_jsxDEV(Product, {\n      id: product.id,\n      title: product.title,\n      image: product.image\n    }, product.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Products, \"IM33jVfoypN7Irf5pwXOwm+Oe18=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/Users/Talha/Desktop/React-class35/week2/project/ecommerce/src/components/Products.js"],"names":["useEffect","useState","useNavigate","Product","Products","selectedCategory","products","setProducts","navigate","getProducts","response","fetch","productList","json","getFilteredProducts","filteredProductList","navigateToProduct","id","map","product","title","image"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,SAASC,QAAT,OAAwC;AAAA;;AAAA,MAAtB;AAAEC,IAAAA;AAAF,GAAsB;AACtC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMO,QAAQ,GAAGN,WAAW,EAA5B;;AAEA,iBAAeO,WAAf,GAA6B;AAC3B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAD,CAA5B;AACA,UAAMC,WAAW,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA1B;AACAN,IAAAA,WAAW,CAACK,WAAD,CAAX;AACD;;AAED,iBAAeE,mBAAf,GAAqC;AACnC,UAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAE,8CAA6CN,gBAAiB,EAAhE,CAA5B;AACA,UAAMU,mBAAmB,GAAG,MAAML,QAAQ,CAACG,IAAT,EAAlC;AACAN,IAAAA,WAAW,CAACQ,mBAAD,CAAX;AACD;;AAEDf,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,gBAAgB,KAAK,EAArB,GAA0BS,mBAAmB,EAA7C,GAAkDL,WAAW,EAA7D;AACD,GAFQ,EAEN,CAACH,QAAD,CAFM,CAAT;;AAIA,WAASU,iBAAT,CAA2BC,EAA3B,EAA+B;AAC7BT,IAAAA,QAAQ,CAAE,aAAYS,EAAG,EAAjB,CAAR;AACD;;AAED,sBACE;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA,cACGX,QAAQ,CAACY,GAAT,CAAcC,OAAD,iBACZ,QAAC,OAAD;AAAS,MAAA,EAAE,EAAEA,OAAO,CAACF,EAArB;AAAyB,MAAA,KAAK,EAAEE,OAAO,CAACC,KAAxC;AAA+C,MAAA,KAAK,EAAED,OAAO,CAACE;AAA9D,OAA0EF,OAAO,CAACF,EAAlF;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA/BQb,Q;UAEUF,W;;;KAFVE,Q;AAiCT,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport Product from './Product';\n\nfunction Products({ selectedCategory }) {\n  const [products, setProducts] = useState([]);\n  const navigate = useNavigate();\n\n  async function getProducts() {\n    const response = await fetch('https://fakestoreapi.com/products/');\n    const productList = await response.json();\n    setProducts(productList);\n  }\n\n  async function getFilteredProducts() {\n    const response = await fetch(`https://fakestoreapi.com/products/category/${selectedCategory}`);\n    const filteredProductList = await response.json();\n    setProducts(filteredProductList);\n  }\n\n  useEffect(() => {\n    selectedCategory !== '' ? getFilteredProducts() : getProducts();\n  }, [products]);\n\n  function navigateToProduct(id) {\n    navigate(`/products/${id}`);\n  }\n\n  return (\n    <ul className=\"products\">\n      {products.map((product) => (\n        <Product id={product.id} title={product.title} image={product.image} key={product.id} />\n      ))}\n    </ul>\n  );\n}\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}