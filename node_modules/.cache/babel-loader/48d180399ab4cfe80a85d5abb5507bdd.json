{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  useEffect(() => {\n    fetchData(url);\n  }, [endpoint]);\n\n  const fetchData = async endpoint => {\n    try {\n      setIsLoading(true);\n      const baseUrl = \"https://fakestoreapi.com/products\";\n      const response = await fetch(`${baseUrl}${endpoint}`);\n\n      if (!response.ok) {\n        const message = `An error has occured while getting data: ${response.status}`;\n        throw new Error(message);\n      }\n\n      const jsonData = await response.json();\n      setData(jsonData);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setErrorMessage(error.message);\n    }\n  };\n\n  return {\n    data,\n    isLoading,\n    errorMessage,\n    fetchData\n  };\n};\n\n_s(useFetch, \"wHna2L372eJ7jyw1V9zUL9CvXlE=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/Talha/Desktop/React-class35/week3/project/ecommerce/src/hooks/useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","isLoading","setIsLoading","errorMessage","setErrorMessage","fetchData","endpoint","baseUrl","response","fetch","ok","message","status","Error","jsonData","json","error"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,SAAS,CAACP,GAAD,CAAT;AACD,GAFQ,EAEN,CAACQ,QAAD,CAFM,CAAT;;AAIA,QAAMD,SAAS,GAAG,MAAOC,QAAP,IAAoB;AACpC,QAAI;AACFJ,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAMK,OAAO,GAAG,mCAAhB;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEF,OAAQ,GAAED,QAAS,EAAvB,CAA5B;;AACA,UAAI,CAACE,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAMC,OAAO,GAAI,4CAA2CH,QAAQ,CAACI,MAAO,EAA5E;AACA,cAAM,IAAIC,KAAJ,CAAUF,OAAV,CAAN;AACD;;AACD,YAAMG,QAAQ,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAvB;AACAf,MAAAA,OAAO,CAACc,QAAD,CAAP;AACAZ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAXD,CAWE,OAAOc,KAAP,EAAc;AACdd,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,eAAe,CAACY,KAAK,CAACL,OAAP,CAAf;AACD;AACF,GAhBD;;AAkBA,SAAO;AAAEZ,IAAAA,IAAF;AAAQE,IAAAA,SAAR;AAAmBE,IAAAA,YAAnB;AAAiCE,IAAAA;AAAjC,GAAP;AACD,CA5BD;;GAAMR,Q;;AA8BN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useFetch = (url) => {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    fetchData(url);\n  }, [endpoint]);\n\n  const fetchData = async (endpoint) => {\n    try {\n      setIsLoading(true);\n      const baseUrl = \"https://fakestoreapi.com/products\";\n      const response = await fetch(`${baseUrl}${endpoint}`);\n      if (!response.ok) {\n        const message = `An error has occured while getting data: ${response.status}`;\n        throw new Error(message);\n      }\n      const jsonData = await response.json();\n      setData(jsonData);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setErrorMessage(error.message);\n    }\n  };\n\n  return { data, isLoading, errorMessage, fetchData };\n};\n\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}