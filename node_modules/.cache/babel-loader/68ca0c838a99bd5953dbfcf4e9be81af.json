{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState('');\n  useEffect(() => {\n    const fetchData = async url => {\n      try {\n        const response = await fetch(`${baseUrl}${url}`);\n\n        if (!response.ok) {\n          const message = `An error has occured while getting data: ${response.status}`;\n          throw new Error(message);\n        }\n\n        const jsonData = await response.json();\n        setData(jsonData);\n        setIsLoading(false);\n      } catch (error) {\n        setIsLoading(false);\n        setIsError(error.message);\n      }\n    };\n\n    fetchData(url);\n  }, [url]);\n  return {\n    data,\n    isLoading,\n    isError\n  };\n};\n\n_s(useFetch, \"jU8ZaR3npAYp5X4aoiZNf0/naJc=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/Talha/Desktop/React-class35/week3/project/ecommerce/src/hooks/useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","isLoading","setIsLoading","isError","setIsError","fetchData","response","fetch","baseUrl","ok","message","status","Error","jsonData","json","error"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,SAAS,GAAG,MAAOP,GAAP,IAAe;AAC/B,UAAI;AACF,cAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAQ,GAAEV,GAAI,EAAlB,CAA5B;;AACA,YAAI,CAACQ,QAAQ,CAACG,EAAd,EAAkB;AAChB,gBAAMC,OAAO,GAAI,4CAA2CJ,QAAQ,CAACK,MAAO,EAA5E;AACA,gBAAM,IAAIC,KAAJ,CAAUF,OAAV,CAAN;AACD;;AACD,cAAMG,QAAQ,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAvB;AACAd,QAAAA,OAAO,CAACa,QAAD,CAAP;AACAX,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OATD,CASE,OAAOa,KAAP,EAAc;AACdb,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,UAAU,CAACW,KAAK,CAACL,OAAP,CAAV;AACD;AACF,KAdD;;AAgBAL,IAAAA,SAAS,CAACP,GAAD,CAAT;AACD,GAlBQ,EAkBN,CAACA,GAAD,CAlBM,CAAT;AAoBA,SAAO;AAAEC,IAAAA,IAAF;AAAQE,IAAAA,SAAR;AAAmBE,IAAAA;AAAnB,GAAP;AACD,CA1BD;;GAAMN,Q;;AA4BN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useFetch = (url) => {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState('');\n\n  useEffect(() => {\n    const fetchData = async (url) => {\n      try {\n        const response = await fetch(`${baseUrl}${url}`);\n        if (!response.ok) {\n          const message = `An error has occured while getting data: ${response.status}`;\n          throw new Error(message);\n        }\n        const jsonData = await response.json();\n        setData(jsonData);\n        setIsLoading(false);\n      } catch (error) {\n        setIsLoading(false);\n        setIsError(error.message);\n      }\n    };\n\n    fetchData(url);\n  }, [url]);\n\n  return { data, isLoading, isError };\n};\n\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}