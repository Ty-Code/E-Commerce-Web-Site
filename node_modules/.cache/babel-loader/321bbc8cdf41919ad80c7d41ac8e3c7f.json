{"ast":null,"code":"var _jsxFileName = \"/Users/Talha/Desktop/React-class35/week2/project/ecommerce/src/components/Categories.js\",\n    _s = $RefreshSig$();\n\nimport Category from './Category';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Categories(_ref) {\n  _s();\n\n  let {\n    setSelectedCategory,\n    checkLoading: [isLoading, setIsLoading],\n    checkError: [isError, setIsError]\n  } = _ref;\n  const [categories, setCategories] = useState([]);\n\n  async function getCategories() {\n    try {\n      const response = await fetch('https://fakestoreapi.com/products/categories');\n      const allCategories = await response.json();\n      setCategories(allCategories);\n    } catch (error) {\n      console.log(error);\n      setIsError(true);\n    }\n  }\n\n  useEffect(() => {\n    getCategories();\n  }, []);\n\n  function selectCategory(e) {\n    const selectedCategory = e.target.textContent;\n    setSelectedCategory(selectedCategory);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"categories\",\n    children: [isError && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"BAD REQUEST!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 19\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : categories.map((categoryName, index) => /*#__PURE__*/_jsxDEV(Category, {\n      title: categoryName,\n      selectCategory: selectCategory\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Categories, \"+ijgB8ROEl0Dkz53OTIi8GynN6s=\");\n\n_c = Categories;\nexport default Categories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"sources":["/Users/Talha/Desktop/React-class35/week2/project/ecommerce/src/components/Categories.js"],"names":["Category","useEffect","useState","Categories","setSelectedCategory","checkLoading","isLoading","setIsLoading","checkError","isError","setIsError","categories","setCategories","getCategories","response","fetch","allCategories","json","error","console","log","selectCategory","e","selectedCategory","target","textContent","map","categoryName","index"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,SAASC,UAAT,OAIG;AAAA;;AAAA,MAJiB;AAClBC,IAAAA,mBADkB;AAElBC,IAAAA,YAAY,EAAE,CAACC,SAAD,EAAYC,YAAZ,CAFI;AAGlBC,IAAAA,UAAU,EAAE,CAACC,OAAD,EAAUC,UAAV;AAHM,GAIjB;AACD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;;AAEA,iBAAeW,aAAf,GAA+B;AAC7B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAAD,CAA5B;AACA,YAAMC,aAAa,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA5B;AACAL,MAAAA,aAAa,CAACI,aAAD,CAAb;AAED,KALD,CAKE,OAAOE,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAR,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AAEF;;AAEDT,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASQ,cAAT,CAAwBC,CAAxB,EAA2B;AACzB,UAAMC,gBAAgB,GAAGD,CAAC,CAACE,MAAF,CAASC,WAAlC;AACArB,IAAAA,mBAAmB,CAACmB,gBAAD,CAAnB;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,eACGd,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADd,EAGGH,SAAS,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,GAGRK,UAAU,CAACe,GAAX,CAAe,CAACC,YAAD,EAAeC,KAAf,kBACb,QAAC,QAAD;AAAU,MAAA,KAAK,EAAED,YAAjB;AAA+B,MAAA,cAAc,EAAEN;AAA/C,OAAoEO,KAApE;AAAA;AAAA;AAAA;AAAA,YADF,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA1CQzB,U;;KAAAA,U;AA4CT,eAAeA,UAAf","sourcesContent":["import Category from './Category';\nimport { useEffect, useState } from 'react';\n\nfunction Categories({\n  setSelectedCategory,\n  checkLoading: [isLoading, setIsLoading],\n  checkError: [isError, setIsError],\n}) {\n  const [categories, setCategories] = useState([]);\n\n  async function getCategories() {\n    try {\n      const response = await fetch('https://fakestoreapi.com/products/categories');\n      const allCategories = await response.json();\n      setCategories(allCategories);\n      \n    } catch (error) {\n      console.log(error);\n      setIsError(true);\n    }\n    \n  }\n\n  useEffect(() => {\n    getCategories();\n  }, []);\n\n  function selectCategory(e) {\n    const selectedCategory = e.target.textContent;\n    setSelectedCategory(selectedCategory);\n  }\n\n  return (\n    <div className=\"categories\">\n      {isError && <span>BAD REQUEST!</span>}\n\n      {isLoading ? (\n        <span>Loading...</span>\n      ) : (\n        categories.map((categoryName, index) => (\n          <Category title={categoryName} selectCategory={selectCategory} key={index} />\n        ))\n      )}\n    </div>\n  );\n}\n\nexport default Categories;\n"]},"metadata":{},"sourceType":"module"}