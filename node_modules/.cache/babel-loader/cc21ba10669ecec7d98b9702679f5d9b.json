{"ast":null,"code":"var _jsxFileName = \"/Users/Talha/Desktop/React-class35/week3/project/ecommerce/src/components/Products.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Product from './Product';\nimport useFetch from '../hooks/useFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Products(_ref) {\n  _s();\n\n  let {\n    selectedCategory // checkLoading: [isLoading, setIsLoading],\n    // checkError: [isError, setIsError],\n\n  } = _ref;\n  const [products, setProducts] = useState([]);\n  let url;\n  selectedCategory === '' ? url = 'https://fakestoreapi.com/products/' : url = `https://fakestoreapi.com/products/category/${selectedCategory}`;\n  const {\n    data,\n    isLoading,\n    isError\n  } = useFetch(url);\n  setProducts(data); // async function getProducts() {\n  //   const newData = await data;\n  //   console.log(newData);\n  //   setProducts(newData);\n  // }\n  // getProducts();\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"products\",\n    children: isError ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"BAD REQUEST!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : isLoading ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : products && products.map(product => /*#__PURE__*/_jsxDEV(Product, {\n      id: product.id,\n      title: product.title,\n      image: product.image\n    }, product.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Products, \"X82+QgdDFinmlUQn9+GBRUoAlnc=\", false, function () {\n  return [useFetch];\n});\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/Users/Talha/Desktop/React-class35/week3/project/ecommerce/src/components/Products.js"],"names":["useState","Product","useFetch","Products","selectedCategory","products","setProducts","url","data","isLoading","isError","map","product","id","title","image"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;AAEA,SAASC,QAAT,OAIG;AAAA;;AAAA,MAJe;AAChBC,IAAAA,gBADgB,CAEhB;AACA;;AAHgB,GAIf;AACD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AAEA,MAAIO,GAAJ;AACAH,EAAAA,gBAAgB,KAAK,EAArB,GACKG,GAAG,GAAG,oCADX,GAEKA,GAAG,GAAI,8CAA6CH,gBAAiB,EAF1E;AAIA,QAAM;AAAEI,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA;AAAnB,MAA+BR,QAAQ,CAACK,GAAD,CAA7C;AAEAD,EAAAA,WAAW,CAACE,IAAD,CAAX,CAVC,CAYD;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA,cACGE,OAAO,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,GAEJD,SAAS,gBACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADW,GAGXJ,QAAQ,IACRA,QAAQ,CAACM,GAAT,CAAcC,OAAD,iBACX,QAAC,OAAD;AAAS,MAAA,EAAE,EAAEA,OAAO,CAACC,EAArB;AAAyB,MAAA,KAAK,EAAED,OAAO,CAACE,KAAxC;AAA+C,MAAA,KAAK,EAAEF,OAAO,CAACG;AAA9D,OAA0EH,OAAO,CAACC,EAAlF;AAAA;AAAA;AAAA;AAAA,YADF;AAPJ;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GArCQV,Q;UAY8BD,Q;;;KAZ9BC,Q;AAuCT,eAAeA,QAAf","sourcesContent":["import { useState } from 'react';\nimport Product from './Product';\nimport useFetch from '../hooks/useFetch';\n\nfunction Products({\n  selectedCategory,\n  // checkLoading: [isLoading, setIsLoading],\n  // checkError: [isError, setIsError],\n}) {\n  const [products, setProducts] = useState([]);\n\n  let url;\n  selectedCategory === ''\n    ? (url = 'https://fakestoreapi.com/products/')\n    : (url = `https://fakestoreapi.com/products/category/${selectedCategory}`);\n\n  const { data, isLoading, isError } = useFetch(url);\n\n  setProducts(data);\n\n  // async function getProducts() {\n  //   const newData = await data;\n  //   console.log(newData);\n  //   setProducts(newData);\n  // }\n  // getProducts();\n\n  return (\n    <ul className=\"products\">\n      {isError ? (\n        <span>BAD REQUEST!</span>\n      ) : isLoading ? (\n        <span>Loading...</span>\n      ) : (\n        products &&\n        products.map((product) => (\n          <Product id={product.id} title={product.title} image={product.image} key={product.id} />\n        ))\n      )}\n    </ul>\n  );\n}\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}