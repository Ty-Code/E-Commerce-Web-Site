{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setErrorMessage] = useState('');\n  useEffect(() => {\n    const fetchData = async url => {\n      try {\n        setIsLoading(true);\n        const baseUrl = 'https://fakestoreapi.com/products';\n        const response = await fetch(`${baseUrl}${url}`);\n\n        if (!response.ok) {\n          const message = `An error has occured while getting data: ${response.status}`;\n          throw new Error(message);\n        }\n\n        const jsonData = await response.json();\n        setData(jsonData);\n        setIsLoading(false);\n      } catch (error) {\n        setIsLoading(false);\n        setErrorMessage(error.message);\n      }\n    };\n\n    fetchData(url);\n  }, [url]);\n  return {\n    data,\n    isLoading,\n    errorMessage,\n    fetchData\n  };\n};\n\n_s(useFetch, \"3prEN1D/3qc3MhBuJcbPwWQet+k=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/Talha/Desktop/React-class35/week3/project/ecommerce/src/hooks/useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","isLoading","setIsLoading","isError","setErrorMessage","fetchData","baseUrl","response","fetch","ok","message","status","Error","jsonData","json","error","errorMessage"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,OAAD,EAAUC,eAAV,IAA6BT,QAAQ,CAAC,EAAD,CAA3C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,SAAS,GAAG,MAAOP,GAAP,IAAe;AAC/B,UAAI;AACFI,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,cAAMI,OAAO,GAAG,mCAAhB;AACA,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEF,OAAQ,GAAER,GAAI,EAAlB,CAA5B;;AACA,YAAI,CAACS,QAAQ,CAACE,EAAd,EAAkB;AAChB,gBAAMC,OAAO,GAAI,4CAA2CH,QAAQ,CAACI,MAAO,EAA5E;AACA,gBAAM,IAAIC,KAAJ,CAAUF,OAAV,CAAN;AACD;;AACD,cAAMG,QAAQ,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAvB;AACAd,QAAAA,OAAO,CAACa,QAAD,CAAP;AACAX,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAXD,CAWE,OAAOa,KAAP,EAAc;AACdb,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,eAAe,CAACW,KAAK,CAACL,OAAP,CAAf;AACD;AACF,KAhBD;;AAkBAL,IAAAA,SAAS,CAACP,GAAD,CAAT;AACD,GApBQ,EAoBN,CAACA,GAAD,CApBM,CAAT;AAsBA,SAAO;AAAEC,IAAAA,IAAF;AAAQE,IAAAA,SAAR;AAAmBe,IAAAA,YAAnB;AAAiCX,IAAAA;AAAjC,GAAP;AACD,CA5BD;;GAAMR,Q;;AA8BN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useFetch = (url) => {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    const fetchData = async (url) => {\n      try {\n        setIsLoading(true);\n        const baseUrl = 'https://fakestoreapi.com/products';\n        const response = await fetch(`${baseUrl}${url}`);\n        if (!response.ok) {\n          const message = `An error has occured while getting data: ${response.status}`;\n          throw new Error(message);\n        }\n        const jsonData = await response.json();\n        setData(jsonData);\n        setIsLoading(false);\n      } catch (error) {\n        setIsLoading(false);\n        setErrorMessage(error.message);\n      }\n    };\n\n    fetchData(url);\n  }, [url]);\n\n  return { data, isLoading, errorMessage, fetchData };\n};\n\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}