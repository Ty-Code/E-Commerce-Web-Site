{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nfunction useFetch(url) {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(null);\n  useEffect(() => {\n    fetchData(url);\n  }, [url]);\n\n  async function fetchData(url) {\n    try {\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw new Error('HTTP Error!');\n      }\n\n      const result = await response.json();\n      setData(result);\n    } catch (error) {\n      setData(null);\n      setIsError(error.message);\n    }\n\n    setIsLoading(false);\n  }\n\n  return {\n    data,\n    isLoading,\n    isError\n  };\n}\n\n_s(useFetch, \"+yEIkAmHgjndDJeSCmbEXW78ieo=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/Talha/Desktop/React-class35/week3/project/ecommerce/src/hooks/useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","isLoading","setIsLoading","isError","setIsError","fetchData","response","fetch","ok","Error","result","json","error","message"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,SAAS,CAACP,GAAD,CAAT;AACD,GAFQ,EAEN,CAACA,GAAD,CAFM,CAAT;;AAIA,iBAAeO,SAAf,CAAyBP,GAAzB,EAA8B;AAC5B,QAAI;AACF,YAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAD,CAA5B;;AACA,UAAI,CAACQ,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,aAAV,CAAN;AACD;;AACD,YAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAArB;AACAX,MAAAA,OAAO,CAACU,MAAD,CAAP;AACD,KAPD,CAOE,OAAOE,KAAP,EAAc;AACdZ,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAI,MAAAA,UAAU,CAACQ,KAAK,CAACC,OAAP,CAAV;AACD;;AACDX,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AAED,SAAO;AAAEH,IAAAA,IAAF;AAAQE,IAAAA,SAAR;AAAmBE,IAAAA;AAAnB,GAAP;AACD;;GAzBQN,Q;;AA2BT,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction useFetch(url) {\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(null);\n\n  useEffect(() => {\n    fetchData(url);\n  }, [url]);\n\n  async function fetchData(url) {\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error('HTTP Error!');\n      }\n      const result = await response.json();\n      setData(result);\n    } catch (error) {\n      setData(null);\n      setIsError(error.message);\n    }\n    setIsLoading(false);\n  }\n\n  return { data, isLoading, isError };\n}\n\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}